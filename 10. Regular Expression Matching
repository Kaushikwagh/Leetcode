Regular Expression Matching

Hard

class Solution {
    public boolean isMatch(String s, String p) {
       int m = s.length();
    int n = p.length();
    boolean[][] dp = new boolean[m + 1][n + 1];

    // Empty string matches empty pattern
    dp[0][0] = true;

    // Initialize the first row of the DP table
    for (int j = 1; j <= n; j++) {
        if (p.charAt(j - 1) == '*') {
            dp[0][j] = dp[0][j - 2];
        }
    }

    // Fill the DP table
    for (int i = 1; i <= m; i++) {
        for (int j = 1; j <= n; j++) {
            char sChar = s.charAt(i - 1);
            char pChar = p.charAt(j - 1);

            if (pChar == '.' || pChar == sChar) {
                dp[i][j] = dp[i - 1][j - 1];
            } else if (pChar == '*') {
                dp[i][j] = dp[i][j - 2]; // Match zero preceding element
                if (p.charAt(j - 2) == '.' || p.charAt(j - 2) == sChar) {
                    dp[i][j] = dp[i][j] || dp[i - 1][j];
                }
            }
        }
    }

    return dp[m][n];
  } 
}
